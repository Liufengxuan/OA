
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>企业周报</title>
    @Styles.Render("~/static/Weekly/iview.css")
    @Scripts.Render("~/Scripts/vue.js")
    @Scripts.Render("~/Scripts/IView/iview.js")
    @Scripts.Render("~/Scripts/vue-resource.js")
</head>
<body>
    <div>

        <template id="weeklyList">
            <div>
                <div style="width:100%">
                    <Timeline-Item style="width:99%" color="green" v-for="(item,index) in list" :id="'_'+item.Id">
                        <p class="time">{{item.SubTime|timed}}&nbsp;&nbsp;&nbsp;提交</p>
                        <Card style="margin-left:4%;margin-top:1%;width:93%" :bordered="true">

                            <p slot="title">
                                {{item.Title}}
                            </p>
                            <h4>本周完成工作：</h4>
                            <p style="margin-left:3%;margin-right:2%;word-break:break-word;">{{item.JobContent}}</p>
                            <h4>本周工作总结：</h4>
                            <p style="margin-left:3%;margin-right:2%;word-break:break-word;">{{item.JobSum}}</p>
                            <h4>备注：</h4>
                            <p style="margin-left:3%;margin-right:2%;word-break:break-word;">{{item.Remark}}</p><br /><br /><br />
                            <h3 style="margin-left:2%">{{item.Upvote|isDisabled|RateTitle}}</h3>
                            <Rate :disabled="item.Upvote|isDisabled" v-on:on-change="updateScore(index)" style="margin-left:2%" allow-half v-model="list[index].avgScore">
                            </Rate>
                            <br /><span style="font-size:small;color: #f5a623;margin-left:2%">他的平均分： {{ (list[index].Score/list[index].Upvote.split("-").length).toFixed(2) }}分</span>
                            <a style="margin-left:50%">{{item.Upvote.split('-').length}}人已读</a>
                        </Card>
                    </Timeline-Item>
                </div>
            </div>
        </template>



        <!----------------------------------------------------------------------------------------------------------------------------------------------->
        <div style="margin:2% 2% 1% 2%;width:95%" id="main">

            <div style="width:69%;float:left;">
                <i-Button v-if="showWriteBtn" v-on:click="writeWeekly" style="margin-left:50%" type="success">填写本周 ({{showWeekDate}}) 周报</i-Button>
                <Timeline>
                    <weekly v-if="showList" :list="weeklys"><weekly>
                </Timeline>
            </div>
            



            <div style="margin-top:2%;margin-left:1%;width:250px;float:left">

                <div style="margin-bottom:100%;margin-left:1%;margin-right:1%;">
                    <Date-Picker v-model="selectDate" type="date" :start-date="new Date(2018,8, 1)" placement="bottom-start" placeholder="历史周报查看" style="width: 240px"></Date-Picker>
                    <h3 style="text-align:center;width: 240px;float:left;color:grey">{{showWeekDate}}</h3>
                    <h3 style="text-align:center;width: 240px;float:left;color:grey">星期一&nbsp; ~&nbsp; 星期天</h3>
                </div>

                <Affix :offset-top="150">
                    <Card style="border-top:solid red;margin-left:1%;margin-right:1%;">
                        <p slot="title">本周得分排名</p>
                        <div v-for="(item,index) in rank" style="width:220px">
                            <span style="width:50px;float:left">NO.{{index+1}}</span>&nbsp;
                            <span style="width:50px;float:left; white-space: nowrap; overflow: hidden;text-overflow: ellipsis; display: inline-block "><a :href="'#'+'_'+item.Id">{{item.UserInfo.UName}}</a></span>
                            <span style="width:50px;margin-right:13%;color: #f5a623;float:left; display: inline-block">&nbsp;&nbsp;{{item.avgScore.toFixed(2)}}分</span>
                        </div>
                    </Card>     
                </Affix>
                @*<a href="#_29" title="API">5</a>*@
                @*<button v-on:click="reLoad">123</button>*@

            </div>
            
        </div>
        <!----------------------------------------------------------------------------------------------------------------------------------------------->



    </div>
</body>
<script>

    Vue.component('weekly', {
        template: '#weeklyList',
        props: ['list'],
        data: function () {
            return {
                Wlist: [],
              
            }
        },

        methods: {
            updateScore: function (index) {
                var score = this.list[index].avgScore;
                var userId = "39";/// window.parent.v.ui.ID______________________________________________________________________________________________________________
                var upvote = this.list[index].Upvote + "-" + userId;
                var s = this.list[index].Score + score;
                var form = {
                    Upvote: upvote,
                    Id: this.list[index].Id,
                    SlefId: userId,
                    Score: s,
                    avgScore: (s / upvote.split("-").length).toFixed(2),
                };
                this.$http.post("/Weekly/UpdateScore", form).then(response => {
                    if (response.body.state == 0) {                       
                        this.list[index].Upvote = form.Upvote;
                        this.list[index].Score = form.Score;
                        var avgScore = form.avgScore;
                        this.$set(this.list[index], 'avgScore', parseFloat(avgScore))
                        this.$Message.success(response.body.msg);

                    } else if (response.body.state == 1) {
                        this.$Message.error(response.body.msg);
                    }
                }, function () {
                    this.$Message.error("请求发送失败");
                });
            },

        },
        //watch: {
        //    'list': function () {
               
        //    },
        filters: {
            isDisabled: function (input) {
                //需要从父页面取值暂时写死为39测试账号
                var userId = 39; //window.parent.v.ui.ID_____________________________________________________________________________________________________________________
                

                var arr = input.split('-');
                for (var i = 0; i < arr.length; i++) {
                    if (userId == arr[i]) {
                        return true;
                    }
                }
                return false;
            },
            RateTitle: function (b) {
                if (b) {
                    return "您已为他打过分";
                } else {

                    return "为他打分 ？"
                }


            },
            timed: function (t) {
                var time = parseInt(new Date(t).getTime() / 1000);
                var currentTime = parseInt(new Date().getTime() / 1000);
                var diffTime = currentTime - time;
                var second = 0;
                var minute = 0;
                var hour = 0;
                if (null != diffTime && "" != diffTime) {
                    if (diffTime > 60 && diffTime < 60 * 60) {
                        diffTime = parseInt(diffTime / 60.0) + "分钟" + parseInt((parseFloat(diffTime / 60.0) - parseInt(diffTime / 60.0)) * 60) + "秒";
                    }
                    else if (diffTime >= 60 * 60 && diffTime < 60 * 60 * 24) {
                        diffTime = parseInt(diffTime / 3600.0) + "小时" + parseInt((parseFloat(diffTime / 3600.0) -
                            parseInt(diffTime / 3600.0)) * 60) + "分钟前" 
                            //parseInt((parseFloat((parseFloat(diffTime / 3600.0) - parseInt(diffTime / 3600.0)) * 60) -
                            //    parseInt((parseFloat(diffTime / 3600.0) - parseInt(diffTime / 3600.0)) * 60)) * 60) + "秒前";
                    }
                    else {
                        //超过1天
                        var date = new Date(parseInt(time) * 1000);
                        diffTime = date.getFullYear() + "/" + (date.getMonth() + 1) + "/" + date.getDate();
                        //diffTime = parseInt(diffTime) + "秒";
                    }
                }
                return diffTime;
            },//时间戳
        },
        //components: {
        //    'ddd': {
        //        template: '',
        //         //负责接收父组件传入的值
        //    }
        //},
        created: function () {
            //this.getWeeklys();
        }
    });



    var _main = new Vue({
        el: "#main",
        data: {
            weeklys: [],
            showList: true,
            rank: [],
            selectDate: "",
            showWeekDate: "",
            showWriteBtn: true,            
        },
        methods: {
            getWeeklys: function () {
                //edge浏览器不会格式化时间
                let interval = this.showWeekDate.replace(/年/g, '-').replace(/月/g, '-').replace(/日/g, '');



                var arr = interval.split('To');
                var date = {
                    start: new Date(Date.parse(arr[0])),
                    end: new Date(Date.parse(arr[1])),
                }
                this.$http.post("/Weekly/GetWeeklys", date).then(response => {
                    this.weeklys = response.body.weeklys;
                    
                   
                }, function () {
                    this.$Message.error("请求失败");
                })

            },
            reLoad: function () {
                this.getWeeklys();
            },
            calcDates: function (date) {
                if (date != "") {
                    var currentDate = new Date(date)
                    var timesStamp = currentDate.getTime();
                    var currenDay = currentDate.getDay();
                    var dates = [];
                    for (var i = 0; i < 7; i++) {
                        dates.push(new Date(timesStamp + 24 * 60 * 60 * 1000 * (i - (currenDay + 6) % 7)).toLocaleDateString().replace(/\//g, '-'));
                    }
                    return dates;
                }
            },
            checkTswk: function () {
                for (var item in this.weeklys) {
                    if (this.weeklys[item].UserId == window.parent.v.ui.ID) {
                        this.showWriteBtn = false;
                        return;
                    }
                }
            },
            writeWeekly: function () {

                window.location.href = "/Weekly/WriteWeekly";
            }
            
        },
        watch: {
            'weeklys': function () {
                //周报列表每次更改都按avgscore进行冒泡排序
                var _rank =this.weeklys;         
                for (var i = 0; i < _rank.length-1; i++) {
                    for (var j = 0; j < _rank.length - 1 - i; j++) {
                        if (_rank[j].avgScore < _rank[j + 1].avgScore) {
                            let tmp = _rank[j];
                            _rank[j] = _rank[j + 1];
                            _rank[j + 1] = tmp;
                        }
                    }
                }
                this.rank = _rank.slice(0,5);
                this.$Message.success("数据已更新");
            },
            'selectDate': function () {
                    let dates=this.calcDates(this.selectDate);
                    this.showWeekDate = dates[0] + " To " + dates[6];
                this.getWeeklys();
                
                }
        },
        //components: {
        //    'weekly': {
        //        template: '#weeklyList',
        //        props: ['list'] //负责接收父组件传入的值
        //    }

        //},

        created: function () {
           
            this.selectDate = new Date();
            this.checkTswk();
           // this.getWeeklys();
        },


    })

</script>
</html>
