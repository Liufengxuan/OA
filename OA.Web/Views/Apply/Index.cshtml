
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>审批事项</title>
    @Styles.Render("~/static/Weekly/iview.css")
    @Scripts.Render("~/Scripts/vue.js")
    @Scripts.Render("~/Scripts/IView/iview.js")
    @Scripts.Render("~/Scripts/vue-resource.js")
</head>
<body>
    <template id="initiateTplt">
        <div style="">
            <Card :dis-hover="true" v-for="(item, index) in dateList" :key="index" style="margin: 3% 23%  3% 10% ">

                <div style="padding: 10px">
                    <row style="border-bottom:solid #000000">
                        <i-col span="6"><h3 style="color:#1a0404"><{{item.ApplyType.Name}}>  申请</h3> </i-col>
                        <i-col span="10" offset="8">
                            <span style="font-size:11px">
                                {{item.SubTime|getLocalTime}} 提交
                                &nbsp;<a v-if="item.State==2">撤销</a>
                                &nbsp;&nbsp;<a v-if="item.State>1">修改</a>
                                &nbsp;&nbsp;<a v-if="item.State==3">再次提交</a>
                            </span>
                        </i-col>
                    </row>

                    <br />
                    <div v-if="item.Number>0">
                        <row>
                            <i-col span="24">
                                <span style="font-size:17px;">请假时长: </span>
                                <span style="color:crimson">{{item.BeginDate|getLocalTime}}</span>
                                至 <span style="color:crimson">{{item.EndDate|getLocalTime}}</span>
                            </i-col>
                        </row><br />
                    </div>
                    <div v-if="item.Money>0">
                        <row>
                            <i-col>
                                <span style="font-size:17px;">金额: </span>
                                ￥<span style="color:crimson">{{item.Money}}</span>
                            </i-col>
                        </row><br />
                    </div>
                    <span style="font-size:17px;">理由: </span>
                    <p style="margin-left:5%;word-break:break-word;">{{item.Remark1}}</p>
                </div>

                <Steps style="margin-right:2%;margin-top:2%;width:99%" size="small" :current="item.State<2?2:1">
                    <Step title="提交申请" content="已提交申请"></Step>
                    <Step title="审批" :status="item.State|Step2States" :content="item.State|Step2Content(item)"></Step>
                    <Step :status="item.State|Step3States" title="审批结果" :content="item.State|Step3Content(index,item.UserInfo1.UName,item.Remark2)"></Step>
                </Steps>
            </Card>

        </div>

    </template>


    <template id="receiveTplt">

    </template>
    <div style="margin:2% 2% 3% 2%;height:530px" id="app">
        <tabs style="width:100%;" :animated="true">
            <tab-pane style="background: #f8f8f9" :label="initiateMsg">
                <initiate style="width:100%;height:550px;overflow-y:auto"> </initiate>
            </tab-pane>


            <tab-pane style="background: #f8f8f9" :label="receiveMsg">
                <receive></receive>
            </tab-pane>
        </tabs>
       
    </div>
</body>
<script>
    Vue.component('initiate', {
        template: '#initiateTplt',
        
        data() {
            return {
                dateList: [],
                isLeave: true,
            }
        },//---------------------------------------------------------------------
        methods: {
            getInitiateList() {
                this.$http.post("/Apply/GetInitiateList").then(resp => {
                    if (resp.body.state == 0) {
                        this.dateList = resp.body.list;
                        this.$Message.success(resp.body.msg);
                    } else {
                        this.$Message.success(resp.body.msg);
                    }

                }, function () {
                    this.$Message.success("请求失败");
                })

            },
        },///---------------------------------------------------------------------
        filters: {
            Step3States(state){
                if (state == 2) {
                    return 'wait'
                } else if (state == 0) {

                    return 'error'
                } else if (state == 1) {

                    return 'finish'
                }

            },
            Step2States(state) {
                if (state == 2) {
                    return 'process'
                } else if (state == 3) {
                    return 'error'
                } else if (state < 2) {
                    return 'finish'

                }

            },
            Step3Content(state,index,name,remark) {
                if (state > 1) {
                    return '······'
                } else if (state == 0) {

                    return '您的申请已被【' + name + '】退回！备注消息:' + remark
                } else if (state == 1) {

                    return '【' + name + '】已同意您的申请！ 备注消息:' + remark
                }

            },
            Step2Content(state, applyObj) {
                if (state == 2) {
                    return '等待【' + applyObj.UserInfo1.UName + '】的审批'
                } else if (state < 2) {
                    return '【' + applyObj.UserInfo1.UName + '】已经审批'
                } else if (state == 3) {
                    return '您已经撤销了此申请'
                }
            },
            getLocalTime(nS) {
                return new Date(nS).toLocaleString().replace(/:\d{1,2}$/, ' ');
            }

        },///---------------------------------------------------------------------
        created() {
            this.getInitiateList();

        },///---------------------------------------------------------------------
        
    });

    Vue.component('receive', {
        template:"#receiveTplt"

    })


    var _Main = new Vue({
        el: "#app",
        data: {
            initiateMsgCount: 0,
            receiveMsgCount:0,
            initiateMsg: (h) => {
                return h('div', [
                    h('span', '  我的申请  '),
                    h('Badge', {
                        props: {
                            count: _Main.initiateMsgCount,
                        }
                    })
                ])
            },
            receiveMsg: (h) => {
                return h('div', [
                    h('span', '   待我审批  '),
                    h('Badge', {
                        props: {
                            count: _Main.receiveMsgCount
                        }

                    })

                ])
            }

        },
        methods: {
            loadMsgCount() {
                this.$http.post("/Apply/GetTabTips").then(resp => {
                    if (resp.body.state == 0) {
                        _Main.initiateMsgCount = resp.body.initiateMsgCount;
                        _Main.receiveMsgCount = resp.body.receiveMsgCount;
                        _Main.$Message.info(resp.body.msg)
                    } else {
                        this.$Message.error("未获取数据")

                    }
                },function () {
                    this.$Message.error("请求失败")

                    })

            },

        },
        created() {
            this.loadMsgCount();

        }

    })
</script>
</html>
